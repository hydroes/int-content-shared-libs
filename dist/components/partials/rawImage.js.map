{"version":3,"sources":["components/partials/rawImage.js"],"names":["RawImage","items","sourceElements","map","item","index","path","mediaQuery","maxWidth","props","caption","credits","buildCaption","buildCredit","sources","buildSourceElements","imageSizes","defaultImgUrl","altText","buildSpans","propTypes","string","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,Q;;;;;;;;;;wCACiBC,K,EAAO;AAC1B,UAAMC,iBAAiBD,MAAME,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChD,YAAID,KAAKE,IAAT,EAAe;AACb,cAAIC,aAAa,iBAAiBH,KAAKI,QAAtB,GAAiC,KAAlD;AACA,iBAAO,0CAAQ,OAAOD,UAAf,EAA2B,QAAQH,KAAKE,IAAxC,EAA8C,KAAKD,KAAnD,GAAP;AACD;AACF,OALsB,CAAvB;;AAOA,aAAOH,cAAP;AACD;;;mCAEe;AACd,UAAI,KAAKO,KAAL,CAAWC,OAAf,EAAwB;AACtB,eAAQ;AAAA;AAAA,YAAM,WAAU,sBAAhB;AAAwC,eAAKD,KAAL,CAAWC,OAAnD;AAAA;AAAA,SAAR;AACD;AACF;;;kCAEc;AACb,UAAI,KAAKD,KAAL,CAAWE,OAAf,EAAwB;AACtB,eAAQ;AAAA;AAAA,YAAM,WAAU,qBAAhB;AAAA;AAA8C,eAAKF,KAAL,CAAWE;AAAzD,SAAR;AACD;AACF;;;iCAEa;AACZ,UAAI,KAAKF,KAAL,CAAWE,OAAX,IAAsB,KAAKF,KAAL,CAAWC,OAArC,EAA8C;AAC5C,eAAQ;AAAA;AAAA,YAAM,WAAU,aAAhB;AACL,eAAKE,YAAL,EADK;AAEL,eAAKC,WAAL;AAFK,SAAR;AAID;AACF;;;6BAES;AACR,UAAMC,UAAU,KAAKC,mBAAL,CAAyB,KAAKN,KAAL,CAAWO,UAApC,CAAhB;AACA,aAAQ;AAAA;AAAA,UAAS,WAAU,OAAnB;AACLF,eADK;AAEN,+CAAK,KAAK,KAAKL,KAAL,CAAWQ,aAArB,EAAoC,KAAK,KAAKR,KAAL,CAAWS,OAApD,EAA6D,OAAO,KAAKT,KAAL,CAAWS,OAA/E,GAFM;AAGL,aAAKC,UAAL;AAHK,OAAR;AAKD;;;;;AAGHnB,SAASoB,SAAT,GAAqB;AACnBH,iBAAe,oBAAUI,MADN;AAEnBX,WAAS,oBAAUW,MAFA;AAGnBV,WAAS,oBAAUU,MAHA;AAInBH,WAAS,oBAAUG,MAJA;AAKnBL,cAAY,oBAAUM;AALH,CAArB;;kBAQetB,Q","file":"rawImage.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass RawImage extends PureComponent {\n  buildSourceElements (items) {\n    const sourceElements = items.map((item, index) => {\n      if (item.path) {\n        let mediaQuery = '(max-width: ' + item.maxWidth + 'px)'\n        return <source media={mediaQuery} srcSet={item.path} key={index} />\n      }\n    })\n\n    return sourceElements\n  }\n\n  buildCaption () {\n    if (this.props.caption) {\n      return (<span className='image__text__caption'>{this.props.caption} </span>)\n    }\n  }\n\n  buildCredit () {\n    if (this.props.credits) {\n      return (<span className='image__text__credit'>&copy; {this.props.credits}</span>)\n    }\n  }\n\n  buildSpans () {\n    if (this.props.credits || this.props.caption) {\n      return (<span className='image__text'>\n        {this.buildCaption()}\n        {this.buildCredit()}\n      </span>)\n    }\n  }\n\n  render () {\n    const sources = this.buildSourceElements(this.props.imageSizes)\n    return (<picture className='image'>\n      {sources}\n      <img src={this.props.defaultImgUrl} alt={this.props.altText} title={this.props.altText} />\n      {this.buildSpans()}\n    </picture>)\n  }\n}\n\nRawImage.propTypes = {\n  defaultImgUrl: PropTypes.string,\n  caption: PropTypes.string,\n  credits: PropTypes.string,\n  altText: PropTypes.string,\n  imageSizes: PropTypes.array\n}\n\nexport default RawImage\n"]}