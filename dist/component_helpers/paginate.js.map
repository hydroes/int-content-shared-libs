{"version":3,"sources":["component_helpers/paginate.js"],"names":["PageGenerator","data","_data","_pages","display","isActive","pageNumber","push","page","href","parsePath","path","current","pathArray","split","parseInt","isNaN","fullPath","SequentialGenerator","noOfPagesToRender","limit","totalPages","createPage","createMovingPageWindow","nextPage","defaultLowerBound","defaultUpperBound","windowSize","numberToFillBy","Math","ceil","lowerPageBound","upperPageBound","i","LogarithmicGenerator","Paginator","pageGenerator","_pageGenerator","generatePages","module","exports","paginate","pages"],"mappings":"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","file":"paginate.js","sourcesContent":["'use strict'\n\nclass PageGenerator {\n  constructor (data) {\n    this._data = data\n  }\n\n  generatePages () {\n    this._pages = []\n  }\n\n  createPage (display, isActive, pageNumber) {\n    this._pages.push({\n      display: display,\n      page: pageNumber,\n      href: this.parsePath(this._data.page, pageNumber, this._data.path),\n      isActive: isActive\n    })\n  }\n\n  parsePath (page, current, path) {\n    let pathArray = path.split('/', 3)\n    if (pathArray[2] === '' || parseInt(pathArray[2]) === page) {\n      return current === 1 ? `/${pathArray[1]}` : `/${pathArray[1]}/${current}`\n    }\n\n    if (isNaN(pathArray[2])) {\n      let fullPath = `${pathArray[1]}/${pathArray[2]}`\n      return current === 1 ? `/${fullPath}/` : `/${fullPath}/${current}/`\n    }\n\n    return '/'\n  }\n}\n\nclass SequentialGenerator extends PageGenerator {\n  generatePages () {\n    super.generatePages()\n    let noOfPagesToRender\n    if (this._data.limit) {\n      noOfPagesToRender = this._data.limit > this._data.totalPages ? this._data.totalPages - 1 : this._data.limit\n    } else {\n      noOfPagesToRender = this._data.totalPages < 10 ? this._data.totalPages - 1 : 10\n    }\n\n    // render the back arrow if we arent on page 1\n    if (this._data.page !== 1) {\n      this.createPage('<', false, this._data.page - 1)\n    }\n\n    // we always want page 1\n    this.createPage(1, this._data.page === 1, 1)\n\n    if (this._data.totalPages > 1) {\n    // create the pages either side of the current page\n      this.createMovingPageWindow(noOfPagesToRender)\n\n      // we always want the last page\n      this.createPage(this._data.totalPages, this._data.totalPages === this._data.page, this._data.totalPages)\n\n      // render the forward arrow if we arent at the end\n      if (this._data.page !== this._data.totalPages) {\n        this.createPage('>', false, this._data.nextPage)\n      }\n    }\n\n    return this._pages\n  }\n\n  createMovingPageWindow (noOfPagesToRender) {\n    const defaultLowerBound = 2\n    const defaultUpperBound = this._data.totalPages - 1\n    const windowSize = noOfPagesToRender - 1\n    const numberToFillBy = Math.ceil((noOfPagesToRender - 2) / 2)\n    let lowerPageBound = noOfPagesToRender\n    let upperPageBound\n\n    if (this._data.page === 1) { // selected page is the first one\n      lowerPageBound = defaultLowerBound\n      upperPageBound = noOfPagesToRender\n    } else if (this._data.page === this._data.totalPages) { // selected page is the last one\n      lowerPageBound = this._data.totalPages - windowSize\n      upperPageBound = defaultUpperBound\n    } else {\n      // we are in the middle of the two ends somewhere.\n      lowerPageBound = this._data.page - numberToFillBy\n      upperPageBound = this._data.page + numberToFillBy\n    }\n\n    // reset the bounds if the window has set negative numbers or greater than the total page count\n    lowerPageBound = lowerPageBound <= 1 ? defaultLowerBound : lowerPageBound\n    upperPageBound = upperPageBound > defaultUpperBound ? defaultUpperBound : upperPageBound\n\n    for (let i = lowerPageBound; i <= upperPageBound; i++) {\n      this.createPage(i, i === this._data.page, i)\n    }\n  }\n}\n\nclass LogarithmicGenerator extends PageGenerator { // eslint-disable-line\n  generatePages () { // eslint-disable-line\n    super.generatePages() // eslint-disable-line\n  } // eslint-disable-line\n} // eslint-disable-line\n\nclass Paginator {\n  constructor (pageGenerator) { // e.g. sequential or logarithmic\n    this._pageGenerator = pageGenerator\n    this._pages = []\n\n    if (this._pageGenerator) { // and generate function exists\n      this._pages = this._pageGenerator.generatePages()\n    }\n  }\n\n  get pages () {\n    return this._pages\n  }\n}\n\nmodule.exports = (data = {}) => {\n  const paginate = new Paginator(new SequentialGenerator(data))\n  return paginate.pages\n}\n"]}