{"version":3,"sources":["libs/component.js"],"names":["componentsRegisterLength","length","Components","env","process","NODE_ENV","i","name","require","path","default","error","console","module","exports","ComponentName","data","Component","html","undefined","Error","componentId","mergedData","createElement","log","clientBoostrapData","id","bootstrapClientSideScript","renderToString"],"mappings":"AAAA;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,2BAA2B,6BAAmBC,MAAlD;AACA,IAAIC,aAAa,EAAjB;AACA,IAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,KAAlC;AACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,wBAApB,EAA8CM,GAA9C,EAAmD;AACjD,MAAI;AACF;AACAJ,eAAW,6BAAmBI,CAAnB,EAAsBC,IAAjC,IAAyCC,QAAQ,6BAAmBF,CAAnB,EAAsBG,IAA9B,EAAoCC,OAA7E;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,YAAQD,KAAR,CAAc,6BAAmBL,CAAnB,EAAsBC,IAAtB,GAA6B,KAA7B,GAAqCI,KAAnD;AACD;AACF;AACD;AACAE,OAAOC,OAAP,GAAiB,UAAUC,aAAV,EAAoC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACnD,MAAIC,kBAAJ;AACA,MAAIC,OAAO,EAAX;;AAEA;AACA,MAAIhB,WAAWa,aAAX,MAA8BI,SAAlC,EAA6C;AAC3C;AACA,QAAIhB,QAAQ,KAAZ,EAAmB;AACjB,YAAM,IAAIiB,KAAJ,CAAU,uBAAV,EAAmCL,aAAnC,CAAN;AACD;AACDH,YAAQD,KAAR,CAAc,uBAAd,EAAuCI,aAAvC;AACD;AACD,MAAIM,cAAc,wBAAS,mBAAT,CAAlB;AACA,MAAIC,aAAa,sBAAc,EAAd,EAAkBN,IAAlB,EAAwB,EAACK,aAAaA,WAAd,EAAxB,CAAjB;;AAEA,MAAI;AACFJ,gBAAY,gBAAMM,aAAN,CAAoBrB,WAAWa,aAAX,CAApB,EAA+CO,UAA/C,CAAZ;AACD,GAFD,CAEE,OAAOX,KAAP,EAAc;AACd,QAAIR,QAAQ,KAAZ,EAAmB;AACjB,YAAM,IAAIiB,KAAJ,CAAU,sCAAV,EAAkDL,aAAlD,CAAN;AACD;AACDH,YAAQY,GAAR,CAAY,sCAAZ,EAAoDT,aAApD;AACD;;AAED,MAAIU,qBAAqB;AACvBC,QAAIL,WADmB;AAEvBd,UAAMQ,aAFiB;AAGvBC,UAAMM;AAHiB,GAAzB;;AAMA,MAAIK,mJAEgC,yBAAeF,kBAAf,CAFhC,qBAAJ;;AAKAP,SAAO,iBAAeU,cAAf,CAA8BX,SAA9B,IAA2CU,yBAAlD;;AAEA,SAAQT,IAAR;AACD,CAtCD","file":"component.js","sourcesContent":["'use strict'\n\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport componentsRegister from './componentsRegister'\nimport uniqueId from 'lodash/uniqueId'\n\n// import and assign all components\nlet componentsRegisterLength = componentsRegister.length\nlet Components = []\nlet env = process.env.NODE_ENV || 'dev'\nfor (let i = 0; i < componentsRegisterLength; i++) {\n  try {\n    // synchrounously require components, do this until new import supports dynamic loading\n    Components[componentsRegister[i].name] = require(componentsRegister[i].path).default\n  } catch (error) {\n    console.error(componentsRegister[i].name + ' - ' + error)\n  }\n}\n// finds and renders a react component\nmodule.exports = function (ComponentName, data = {}) {\n  let Component\n  let html = ''\n\n  // test if component found\n  if (Components[ComponentName] === undefined) {\n    // only throw error on dev env, return empty string in production\n    if (env === 'dev') {\n      throw new Error('Component not found: ', ComponentName)\n    }\n    console.error('Component not found: ', ComponentName)\n  }\n  let componentId = uniqueId('bauerComponentId_')\n  let mergedData = Object.assign({}, data, {componentId: componentId})\n\n  try {\n    Component = React.createElement(Components[ComponentName], mergedData)\n  } catch (error) {\n    if (env === 'dev') {\n      throw new Error('Component is not a valid component: ', ComponentName)\n    }\n    console.log('Component is not a valid component: ', ComponentName)\n  }\n\n  let clientBoostrapData = {\n    id: componentId,\n    name: ComponentName,\n    data: mergedData\n  }\n\n  let bootstrapClientSideScript = `<script>\n    window.bootstrapComponents = window.bootstrapComponents || [];\n    window.bootstrapComponents.push(${JSON.stringify(clientBoostrapData)})\n    </script>`\n\n  html = ReactDOMServer.renderToString(Component) + bootstrapClientSideScript\n\n  return (html)\n}\n"]}