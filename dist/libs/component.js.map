{"version":3,"sources":["libs/component.js"],"names":["Components","i","length","name","require","path","default","error","console","module","exports","ComponentName","data","Component","html","undefined","Error","componentId","mergedData","createElement","clientBoostrapData","id","bootstrapClientSideScript","ComponentHtml","renderToString","helmet","renderStatic","ComponentScript","script","toString"],"mappings":"AAAA;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;AACA,IAAIA,aAAa,gCAAsB,EAAvC;;AAEA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,WAAWE,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1C,MAAI;AACF;AACAD,eAAW,6BAAmBC,CAAnB,EAAsBE,IAAjC,IAAyCC,QAAQ,6BAAmBH,CAAnB,EAAsBI,IAA9B,EAAoCC,OAA7E;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,YAAQD,KAAR,CAAc,6BAAmBN,CAAnB,EAAsBE,IAAtB,GAA6B,KAA7B,GAAqCI,KAAnD;AACD;AACF;AACD;AACAE,OAAOC,OAAP,GAAiB,UAAUC,aAAV,EAAoC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACnD,MAAIC,kBAAJ;AACA,MAAIC,OAAO,EAAX;;AAEA;AACA,MAAId,WAAWW,aAAX,MAA8BI,SAAlC,EAA6C;AAC3C,UAAM,IAAIC,KAAJ,CAAU,uBAAV,EAAmCL,aAAnC,CAAN;AACD;AACD,MAAIM,cAAc,wBAAS,mBAAT,CAAlB;AACA,MAAIC,aAAa,sBAAc,EAAd,EAAkBN,IAAlB,EAAwB,EAACK,aAAaA,WAAd,EAAxB,CAAjB;;AAEA,MAAI;AACFJ,gBAAY,gBAAMM,aAAN,CAAoBnB,WAAWW,aAAX,CAApB,EAA+CO,UAA/C,CAAZ;AACD,GAFD,CAEE,OAAOX,KAAP,EAAc;AACd,UAAM,IAAIS,KAAJ,CAAU,sCAAV,EAAkDL,aAAlD,CAAN;AACD;;AAED,MAAIS,qBAAqB;AACvBC,QAAIJ,WADmB;AAEvBd,UAAMQ,aAFiB;AAGvBC,UAAMM;;AAGR;AANyB,GAAzB,CAOA,IAAII,mJAEgC,yBAAeF,kBAAf,CAFhC,qBAAJ;;AAKA;AACA,MAAIG,gBAAgB,iBAAeC,cAAf,CAA8BX,SAA9B,CAApB;AACA,MAAMY,SAAS,oBAAOC,YAAP,EAAf;AACA;AACA,MAAIC,kBAAkBF,OAAOG,MAAP,CAAcC,QAAd,EAAtB;;AAEAf,SAAOS,gBAAgBI,eAAhB,GAAkCL,yBAAzC;;AAEA,SAAQR,IAAR;AACD,CAtCD","file":"component.js","sourcesContent":["'use strict'\n\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport componentsRegister from './componentsRegister'\nimport uniqueId from 'lodash/uniqueId'\nimport { Helmet } from 'react-helmet'\n\n// import and assign all components\nlet Components = componentsRegister || []\n\nfor (let i = 0; i < Components.length; i++) {\n  try {\n    // synchrounously require components, do this until new import supports dynamic loading\n    Components[componentsRegister[i].name] = require(componentsRegister[i].path).default\n  } catch (error) {\n    console.error(componentsRegister[i].name + ' - ' + error)\n  }\n}\n// finds and renders a react component\nmodule.exports = function (ComponentName, data = {}) {\n  let Component\n  let html = ''\n\n  // test if component found\n  if (Components[ComponentName] === undefined) {\n    throw new Error('Component not found: ', ComponentName)\n  }\n  let componentId = uniqueId('bauerComponentId_')\n  let mergedData = Object.assign({}, data, {componentId: componentId})\n\n  try {\n    Component = React.createElement(Components[ComponentName], mergedData)\n  } catch (error) {\n    throw new Error('Component is not a valid component: ', ComponentName)\n  }\n\n  let clientBoostrapData = {\n    id: componentId,\n    name: ComponentName,\n    data: mergedData\n  }\n\n  // build bootstrap code for the component to be instantiated by clientside react\n  let bootstrapClientSideScript = `<script>\n    window.bootstrapComponents = window.bootstrapComponents || [];\n    window.bootstrapComponents.push(${JSON.stringify(clientBoostrapData)})\n    </script>`\n\n  // build component html\n  let ComponentHtml = ReactDOMServer.renderToString(Component)\n  const helmet = Helmet.renderStatic()\n  // if a component has script tags then include it in the response\n  let ComponentScript = helmet.script.toString()\n\n  html = ComponentHtml + ComponentScript + bootstrapClientSideScript\n\n  return (html)\n}\n"]}